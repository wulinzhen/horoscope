<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boc.horoscope.horos.mapper.HsGodEvilMapper" >
  <resultMap id="BaseResultMap" type="com.boc.horoscope.horos.po.HsGodEvil" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="main_element" property="mainElement" jdbcType="VARCHAR" />
    <result column="rel_element" property="relElement" jdbcType="VARCHAR" />
    <result column="main_type" property="mainType" jdbcType="INTEGER" />
    <result column="god_evil" property="godEvil" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, main_element, rel_element, main_type, god_evil, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hs_god_evil
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMainAdndRelElement" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from hs_god_evil
    where main_element = #{mainEle,jdbcType=VARCHAR}
    and main_type = #{mainType,jdbcType=INTEGER}
    and rel_element in
    <foreach item="relEle" index="index" collection="relEles" open="(" separator="," close=")">
      #{relEle}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hs_god_evil
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.boc.horoscope.horos.po.HsGodEvil" >
    insert into hs_god_evil (id, main_element, rel_element, 
      main_type, god_evil, description
      )
    values (#{id,jdbcType=INTEGER}, #{mainElement,jdbcType=VARCHAR}, #{relElement,jdbcType=VARCHAR}, 
      #{mainType,jdbcType=INTEGER}, #{godEvil,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boc.horoscope.horos.po.HsGodEvil" >
    insert into hs_god_evil
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mainElement != null" >
        main_element,
      </if>
      <if test="relElement != null" >
        rel_element,
      </if>
      <if test="mainType != null" >
        main_type,
      </if>
      <if test="godEvil != null" >
        god_evil,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mainElement != null" >
        #{mainElement,jdbcType=VARCHAR},
      </if>
      <if test="relElement != null" >
        #{relElement,jdbcType=VARCHAR},
      </if>
      <if test="mainType != null" >
        #{mainType,jdbcType=INTEGER},
      </if>
      <if test="godEvil != null" >
        #{godEvil,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.boc.horoscope.horos.po.HsGodEvil" >
    update hs_god_evil
    <set >
      <if test="mainElement != null" >
        main_element = #{mainElement,jdbcType=VARCHAR},
      </if>
      <if test="relElement != null" >
        rel_element = #{relElement,jdbcType=VARCHAR},
      </if>
      <if test="mainType != null" >
        main_type = #{mainType,jdbcType=INTEGER},
      </if>
      <if test="godEvil != null" >
        god_evil = #{godEvil,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boc.horoscope.horos.po.HsGodEvil" >
    update hs_god_evil
    set main_element = #{mainElement,jdbcType=VARCHAR},
      rel_element = #{relElement,jdbcType=VARCHAR},
      main_type = #{mainType,jdbcType=INTEGER},
      god_evil = #{godEvil,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>